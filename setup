#!/bin/bash

set -e

# Colors for output
GREEN='\033[0;32m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

log() {
    echo -e "${BLUE}==>${NC} $1"
}

success() {
    echo -e "${GREEN}âœ“${NC} $1"
}

# Set XDG_CONFIG_HOME if not already set
if [ -z "$XDG_CONFIG_HOME" ]; then
    export XDG_CONFIG_HOME="$HOME/.config"
    log "XDG_CONFIG_HOME not set, using default: $XDG_CONFIG_HOME"
fi

# Check brew is installed
if ! command -v brew &>/dev/null; then
    echo "Homebrew not found, please install it first from https://brew.sh/"
    exit 1
fi

# Check gh cli is installed
if ! command -v gh &>/dev/null; then
    log "Installing GitHub CLI..."
    brew install gh
fi

# Check stow is installed
if ! command -v stow &>/dev/null; then
    log "Installing stow..."
    brew install stow
fi

# Work specific settings
if [ ! -f "$PWD/shell/.config/shell/work" ]; then
    log "Creating work config from example..."
    cp "$PWD/shell/.config/shell/work.example" "$PWD/shell/.config/shell/work"
fi

# Stow packages
log "Stowing configurations..."

# Stow all packages
stow --restow --target="$HOME" shell
success "Shell configs stowed"

stow --restow --target="$HOME" tmux
success "Tmux configs stowed"

stow --restow --target="$HOME" nvim
success "Neovim configs stowed"

stow --restow --target="$HOME" terminal
success "Terminal configs stowed"

stow --restow --target="$HOME" git-tools
success "Git tools configs stowed"

# Install dependencies
log "Installing external dependencies..."

# Tmux Package Manager
if [ ! -d "$HOME/.tmux/plugins/tpm" ]; then
    git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
    success "TPM installed"
fi

# Alacritty themes
if [ ! -d "$XDG_CONFIG_HOME/alacritty/themes" ]; then
    git clone https://github.com/alacritty/alacritty-theme "$XDG_CONFIG_HOME/alacritty/themes"
    success "Alacritty themes installed"
fi

# Tmux Theme
if [ ! -d "$HOME/.config/tmux/plugins/catppuccin/tmux" ]; then
    mkdir -p ~/.config/tmux/plugins/catppuccin
    git clone -b v2.1.3 https://github.com/catppuccin/tmux.git ~/.config/tmux/plugins/catppuccin/tmux
    success "Catppuccin tmux theme installed"
fi

# Oh My Zsh
if [ ! -d "$HOME/.oh-my-zsh" ]; then
    log "Installing Oh My Zsh..."
    sh -c "$(wget https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh -O -)"
fi

# Zsh autosuggestions
if [ ! -d "${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions" ]; then
    git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions
    success "Zsh autosuggestions installed"
fi

# Install packages
log "Installing packages with Homebrew..."

brew install rg fd gnu-sed wget fzf zoxide
success "General utility packages installed"

# brew install --cask alacritty
brew install --cask ghostty
success "Ghostty installed"

brew install nvim
success "Neovim installed"

brew install tmux
success "Tmux installed"

brew install sesh
success "Sesh installed"

brew install font-hack-nerd-font
success "Hack Nerd Font installed"

brew install --cask raycast
success "Raycast installed"

brew install go
success "Go installed"

brew install jesseduffield/lazygit/lazygit
go install github.com/arl/gitmux@latest
gh extension install dlvhdr/gh-dash
success "Git tools installed"

brew install fnm pnpm
success "Node packages installed"

# Build and install custom alx CLI
if [ -d "$PWD/alx" ]; then
    log "Building alx CLI..."
    cd alx && go build && cd ..
    if [ ! -d "$HOME/.local/bin" ]; then
        mkdir -p "$HOME/.local/bin"
    fi
    ln -sf "$PWD/alx/alx" "$HOME/.local/bin/alx"
    success "alx CLI built and installed"
fi

echo ""
echo -e "${GREEN}Setup complete!${NC}"

# === Linux specific packages
# sudo apt install build-essential ripgrep tmux fd-find -y

# Ruby
# gpg --keyserver keyserver.ubuntu.com --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB
# sudo apt-add-repository -y ppa:rael-gc/rvm
# sudo apt-get update
# sudo apt-get install rvm -y
# sudo usermod -a -G rvm $USER
# echo -e '\nsource "/etc/profile.d/rvm.sh"' >> ~/.bashrc
